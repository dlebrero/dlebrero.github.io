<?xml version='1.0' encoding='UTF-8'?>
<rss version='2.0' xmlns:atom='http://www.w3.org/2005/Atom'>
<channel>
<atom:link href='https://danlebrero.com' rel='self' type='application/rss+xml'/>
<title>
Daniel Lebrero Berna Blog
</title>
<link>
https://danlebrero.com
</link>
<language>
en
</language>
<lastBuildDate>
Mon, 17 Dec 2018 09:25:00 +0100
</lastBuildDate>
<pubDate>
Mon, 17 Dec 2018 09:25:00 +0100
</pubDate>
<description>
Daniel Lebrero blog
</description>
<generator>
clj-rss
</generator>
<item>
<title>
RocksDB range queries in KafkaStream: dealing with big results 
</title>
<link>
https://danlebrero.com/2018/12/17/big-results-in-kafka-streams-range-query-rocksdb/
</link>
<guid>
https://danlebrero.com/2018/12/17/big-results-in-kafka-streams-range-query-rocksdb/
</guid>
<pubDate>
Mon, 17 Dec 2018 09:25:00 +0100
</pubDate>
<description>
An example of how to choose between a KafkaStreams' KTable or KStream when doing stateful streaming transformations
</description>
</item>
<item>
<title>
In KafkaStreams, when to choose between a KTable or a KStream?
</title>
<link>
https://danlebrero.com/2018/10/08/when-to-choose-ktable-or-kstream-in-kafka-streams/
</link>
<guid>
https://danlebrero.com/2018/10/08/when-to-choose-ktable-or-kstream-in-kafka-streams/
</guid>
<pubDate>
Mon, 08 Oct 2018 20:25:00 +0200
</pubDate>
<description>
An example of how to choose between a KafkaStreams' KTable or KStream when doing stateful streaming transformations
</description>
</item>
<item>
<title>
Kubernetes explained in pictures: StatefulSets, Persistent Volumes and Headless Services
</title>
<link>
https://danlebrero.com/2018/07/22/kubernetes-explained-in-pictures-stateful-sets-persistent-volume-headless-service/
</link>
<guid>
https://danlebrero.com/2018/07/22/kubernetes-explained-in-pictures-stateful-sets-persistent-volume-headless-service/
</guid>
<pubDate>
Sun, 22 Jul 2018 00:00:00 +0200
</pubDate>
<description>
Explaining Kubernetes StatefulSets, Persistent Volume and Headless Services using KubePark's cloakroom service.
</description>
</item>
<item>
<title>
Kubernetes explained: the theme park analogy: auto scaling, taints and affinities
</title>
<link>
https://danlebrero.com/2018/07/16/kubernetes-explained-in-pictures-the-theme-park-analogy/
</link>
<guid>
https://danlebrero.com/2018/07/16/kubernetes-explained-in-pictures-the-theme-park-analogy/
</guid>
<pubDate>
Mon, 16 Jul 2018 00:00:00 +0200
</pubDate>
<description>
More on explaining Kubernetes and theme parks: scaling, taints and affinities.
</description>
</item>
<item>
<title>
Kubernetes explained in pictures: the theme park analogy
</title>
<link>
https://danlebrero.com/2018/07/09/kubernetes-explained-in-pictures-the-theme-park-analogy/
</link>
<guid>
https://danlebrero.com/2018/07/09/kubernetes-explained-in-pictures-the-theme-park-analogy/
</guid>
<pubDate>
Mon, 09 Jul 2018 00:00:00 +0200
</pubDate>
<description>
This is an attempt to explain Kubernetes core concepts (pods, nodes, services, resources, ...) with an theme park analogy.
</description>
</item>
<item>
<title>
Per user rate limiting with OpenID connect and Istio in Kubernetes
</title>
<link>
https://danlebrero.com/2018/05/31/per-user-rate-limiting-with-istio-openid-connect-in-kubernetes/
</link>
<guid>
https://danlebrero.com/2018/05/31/per-user-rate-limiting-with-istio-openid-connect-in-kubernetes/
</guid>
<pubDate>
Thu, 31 May 2018 00:00:00 +0200
</pubDate>
<description>
How to do rate limiting with Istio on Kubernetes a per user basis, using OpenID Connect to identify it. 
</description>
</item>
<item>
<title>
Kafka, GDPR and Event Sourcing
</title>
<link>
https://danlebrero.com/2018/04/11/kafka-gdpr-event-sourcing/
</link>
<guid>
https://danlebrero.com/2018/04/11/kafka-gdpr-event-sourcing/
</guid>
<pubDate>
Wed, 11 Apr 2018 09:35:00 +0200
</pubDate>
<description>
Proof of concept for compliance with GDPR on an Event Sourcing architecture built with Apache Kafka.
</description>
</item>
<item>
<title>
Kafka, GDPR and Event Sourcing - Implementation details
</title>
<link>
https://danlebrero.com/2018/04/11/kafka-gdpr-event-sourcing-implentation/
</link>
<guid>
https://danlebrero.com/2018/04/11/kafka-gdpr-event-sourcing-implentation/
</guid>
<pubDate>
Wed, 11 Apr 2018 09:45:00 +0200
</pubDate>
<description>
Implementation details for a proof of concept for compliance with GDPR on an Event Sourcing architecture built with Apache Kafka.
</description>
</item>
<item>
<title>
Kafka, distributed coordination and the actor model
</title>
<link>
https://danlebrero.com/2018/04/09/kafka-distributed-coordination-actor-model/
</link>
<guid>
https://danlebrero.com/2018/04/09/kafka-distributed-coordination-actor-model/
</guid>
<pubDate>
Mon, 09 Apr 2018 10:00:00 +0200
</pubDate>
<description>
On how to design KafkaStream applications in terms of the actor model. 
</description>
</item>
<item>
<title>
Production data never lies
</title>
<link>
https://danlebrero.com/2018/03/20/production-data-never-lies/
</link>
<guid>
https://danlebrero.com/2018/03/20/production-data-never-lies/
</guid>
<pubDate>
Tue, 20 Mar 2018 00:00:00 +0100
</pubDate>
<description>
Using production data to automatically generate Avro schemas, using Spec-Provider. 
</description>
</item>
</channel>
</rss>
